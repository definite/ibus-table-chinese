### File header must not be modified
### This file must be encoded into UTF-8.
### This table is freely redistributable without restriction
### comments start with ### not single #
### Derive from the format of SCIM Table, so you can modify the table from
### scim-tables' table
SCIM_Generic_Table_Phrase_Library_TEXT
VERSION_1_0

### Begin Table definition.
BEGIN_DEFINITION

### License
LICENSE =  Freely redistributable without restriction

### A unique number indicates the version of this file.
### For example the last modified date of this file.
### This number must be less than 2^32.
### Just make your table version-able
SERIAL_NUMBER = 20090101

### Supported languages of this table
### sigle "zh_CN" just be recognized as zh_CN,
### but "zh_CN, zh_HK" or more zh_XX will be recognized as zh;
### and "en_US, zh_CN" will be just ignored.
LANGUAGES = zh_CN,zh_SG,zh_TW,zh_HK

### Default value for the language filter.
### Only important for Chinese, it can be set to “cm<number>” where
### <number> can be in the range from 0 to 4. “cm” means “Chinese mode”.
### cm0 means to show simplified Chinese only
### cm1 means to show traditional Chinese only
### cm2 means to show all characters but show simplified Chinese first
### cm3 means to show all characters but show traditional Chinese first
### cm4 means to show all characters
LANGUAGE_FILTER = cm3

### The author of this table
AUTHOR = 葉光哲, 廖明德

### Prompt string to be displayed in the status area, CN will be replaced by
### the gettext tools in runtime as 中.
STATUS_PROMPT = CN

### Valid input chars.
VALID_INPUT_CHARS = abcdefghijklmnopqrstuvwxyz./;,

### Layout
LAYOUT = us

### The max number of input keys for every phrase or character.
MAX_KEY_LENGTH = 5

### Use full width punctuation by default
DEF_FULL_WIDTH_PUNCT = TRUE

### Not use full width letter by default
DEF_FULL_WIDTH_LETTER = FALSE

### Whether user are allow to define phrase, default is true
### You have to define the word construction rules below.
### For input methods which do not input phrases, set this to False
USER_CAN_DEFINE_PHRASE = TRUE

### Whether support PinYin Mode, default is true.
### this feature is just for Chinese, set it to False if your IM is not
### Chinese.
PINYIN_MODE = TRUE

### If true then the phrases' frequencies will be adjusted dynamically
### according your using frequency.
DYNAMIC_ADJUST = FALSE

### Some characters whose frequencies should be fix all the time, e.g.
### some punctuations
### NO_CHECK_CHARS =

### Rules for constructing user defined phrase
### "ce" stands for "ci equal", a Chinese English :), means "phrase length
### equal to", thus ce2 -> phrase length equal to 2; and "ca" means "phrase
### length equal or above", so ca4 -> phrase length equal or above 4.
### p21 -> the 1st key of 2nd character in the phrase, and so on.
### Each rule separate via ";".
### Example below is a complete rule-set,
### becuase [2,2] ∩ [3,3] ∩ [4,+∞] = [2,+∞], which is the range of length
### of phrase. This have to be satisfied if you need ibus-table to build up
### your own inputed phrase via your daily using.
### RULES =

### Define the prompts of each valid input char.
BEGIN_CHAR_PROMPTS_DEFINITION
q 1^
w 2^
e 3^
r 4^
t 5^
y 6^
u 7^
i 8^
o 9^
p 0^
a 1-
s 2-
d 3-
f 4-
g 5-
h 6-
j 7-
k 8-
l 9-
; 0-
z 1v
x 2v
c 3v
v 4v
b 5v
n 6v
m 7v
, 8v
. 9v
/ 0v
END_CHAR_PROMPTS_DEFINITION

### An unique id to distinguish this table among others.
### Use uuidgen to generate this kind of id.
UUID = @UUID@

### ICON can be any format as long as your pygtk can recognized
### the most widely ones are "png" and "svg", letter one is recommended
ICON = @ICON_FILE@

### The default name of this table, this is needed
NAME = @TABLE_NAME_EN@

### The local names of this table, this is optional
NAME.zh_CN = @TABLE_NAME_ZH@
NAME.zh_HK = @TABLE_NAME_ZH@
NAME.zh_TW = @TABLE_NAME_ZH@

### Description
DESCRIPTION = @DESC@

END_DEFINITION

### Begin Table data.
### Format of every line whose formated in "input_keys\tphrase\tfreq\n" is an
### entry.
### From left to right, the 1st column are the input key combination that you
### entered via keyboard; the 2nd column are presented character or phrase of
### the key combination you want; the 3rd column are frequency of the character

### Begin Table data.
BEGIN_TABLE
